{"version":3,"sources":["pages/detailpage/calvin/calvin.scss","abstracts/_variables.scss","base/_colors.scss","abstracts/_mixins.scss"],"names":[],"mappings":"AAQA,MACI,sDAAuD,CAG3D,aACI,WAAY,CACZ,0BCNsB,CDOtB,oBAAqB,CACrB,wBEbkB,CFStB,eAOQ,SAAU,CACV,iBAAkB,CAClB,0BCbkB,CDclB,mBAAoB,CAV5B,sCAeQ,cAAe,CACf,eAAgB,CAChB,aE1Bc,CF2Bd,mBAAoB,CACpB,4BAA6B,CAnBrC,0CAsBY,SAAU,CACV,aAAc,CACd,aEjCU,CFkCV,oBAAqB,CAKjC,iBACI,iBAAkB,CAClB,eAAgB,CAChB,UAAW,CACX,kBAAmB,CACnB,kBC9CmB,CD+CnB,sCAGkF,CATtF,oCAWQ,iBAAkB,CAClB,KAAM,CACN,MAAO,CACP,QAAS,CACT,OAAQ,CACR,UAAW,CACX,WAAY,CACZ,WAAY,CAIpB,iBAEQ,aE/Dc,CF6DtB,6BAMgB,wBEnEM,CF6EtB,qCACI,aE9EkB,CCgCd,yBHkDJ,iBACI,gBACiD,CACpD","file":"calvin.min.css","sourcesContent":["// Abstract\r\n@import '../../../abstracts/variables';\r\n@import '../../../abstracts/mixins';\r\n\r\n// Base\r\n@import '../../../base/colors';\r\n\r\n\r\n.hero {\r\n    background-image: url(../../../../images/bg_orange.png);\r\n}\r\n\r\n.btn-primary {\r\n    border: none;\r\n    transition: $trans-02;\r\n    transition-delay: .2s;\r\n    background-color: $color-calvin;\r\n\r\n    i {\r\n        opacity: 0;\r\n        margin-left: -15px;\r\n        transition: $trans-02;\r\n        transition-delay: 0s;\r\n    }\r\n\r\n    &:hover,\r\n    &:focus {\r\n        padding-left: 0;\r\n        box-shadow: none;\r\n        color: $color-calvin;\r\n        transition-delay: 0s;\r\n        background-color: transparent;\r\n\r\n        i {\r\n            opacity: 1;\r\n            margin-left: 0;\r\n            color: $color-calvin;\r\n            transition-delay: .2s;\r\n        }\r\n    }\r\n}\r\n\r\n.frame-container {\r\n    position: relative;\r\n    overflow: hidden;\r\n    width: 100%;\r\n    padding-top: 56.25%;\r\n    border-radius: $border-radius-20;\r\n    box-shadow: $box-shadow;\r\n    /* 16:9 Aspect Ratio (divide 9 by 16 = 0.5625) */\r\n\r\n    /* Then style the iframe to fit in the container div with full height and width */\r\n    .responsive-iframe {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        bottom: 0;\r\n        right: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        border: none;\r\n    }\r\n}\r\n\r\n.projecten {\r\n    .item {\r\n        color: $color-calvin;\r\n\r\n        .card {\r\n            &:hover {\r\n                background-color: $color-calvin;\r\n            }\r\n\r\n            .card-link {\r\n                color: $color-calvin;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nh2 {\r\n    color: $color-calvin;\r\n}\r\n\r\n@include media-down(lg) {\r\n    .frame-container {\r\n        padding-top: 117%;\r\n        /* 16:9 Aspect Ratio (divide 9 by 16 = 0.5625) */\r\n    }\r\n}","// Border-radius\r\n$border-radius-20: 20px;\r\n$border-radius-100: 100px;\r\n\r\n// Box-shadow\r\n$box-shadow: 0 5px 2.5px rgba(0, 0, 0, .25);\r\n\r\n// Transitions\r\n$trans-02: .2s ease-in-out;\r\n\r\n// Breakpoints\r\n$breakpoints: (sm: 576px, md: 768px, lg: 992px, xl: 1200px);","// Personal colors\r\n$color-stijn: #E41D20;\r\n$color-andrew: #5BB130;\r\n$color-calvin: #F7A41A;\r\n$color-shantusha: #E62250;\r\n\r\n// Main colors\r\n$white: #fff;\r\n$gray: #f2f2f2;\r\n\r\n$black:#272D2E;\r\n$matte-black:#393939;\r\n\r\n// Overlays\r\n$top-right-overlay: linear-gradient(to top right, rgba(0, 0, 0, 0.1), steps(2, skip-none), transparent);\r\n$bottom-left-overlay: linear-gradient(to bottom left, rgba(0, 0, 0, 0.04), steps(3, skip-none), transparent);\r\n\r\n// Gradients\r\n$primary-colors-grad: linear-gradient(to right,\r\n    $color-stijn,\r\n    $color-andrew,\r\n    $color-calvin,\r\n    $color-shantusha);","// Breakpoints\r\n// Media Up.\r\n@mixin media-up($breakpoint) {\r\n\r\n    // If the breakpoint exists in the map.\r\n    @if map-has-key($breakpoints, $breakpoint) {\r\n\r\n        // Get the breakpoint value.\r\n        $breakpoint-value: map-get($breakpoints, $breakpoint);\r\n\r\n        // Write the media query.\r\n        @media (min-width: $breakpoint-value) {\r\n            @content;\r\n        }\r\n\r\n        // If the breakpoint doesn't exist in the map.\r\n    }\r\n\r\n    @else {\r\n\r\n        // Log a warning.\r\n        @warn 'Invalid breakpoint: #{$breakpoint}.';\r\n    }\r\n}\r\n\r\n// Media Down\r\n@mixin media-down($breakpoint) {\r\n\r\n    // If the breakpoint exists in the map.\r\n    @if map-has-key($breakpoints, $breakpoint) {\r\n\r\n        // Get the breakpoint value.\r\n        $breakpoint-value: map-get($breakpoints, $breakpoint);\r\n\r\n        // Write the media query.\r\n        @media (max-width: ($breakpoint-value - 1)) {\r\n            @content;\r\n        }\r\n\r\n        // If the breakpoint doesn't exist in the map.\r\n    }\r\n\r\n    @else {\r\n\r\n        // Log a warning.\r\n        @warn 'Invalid breakpoint: #{$breakpoint}.';\r\n    }\r\n}"]}